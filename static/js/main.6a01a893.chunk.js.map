{"version":3,"sources":["Components/Login.js","actions/index.js","Components/Add.js","Components/Admin.js","Components/Dashboard.js","Components/EditStock.js","Components/TotalIncome.js","App.js","serviceWorker.js","reducers/logged.js","reducers/stocks.js","reducers/incomeReducer.js","reducers/counter.js","reducers/soldReducer.js","reducers/index.js","index.js"],"names":["Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","className","transition","Zoom","autoClose","onSubmit","e","event","preventDefault","setTimeout","type","toast","success","position","POSITION","TOP_CENTER","error","login","placeholder","name","onChange","target","value","Add","setName","setType","price","setPrice","count","setCount","data","addStock","required","Admin","useSelector","state","logged","Dashboard","stocks","stock","loggedin","key","setKey","console","log","style","marginLeft","length","map","index","toString","onClick","amount","reducer","window","location","replace","JSON","stringify","edit","opacity","EditSock","props","setIndex","useEffect","obj","parse","match","params","pos","editStock","deletestock","TotalIncome","sold","income","textDecoration","fontWeight","App","logg","href","color","logout","exact","path","component","EditStock","Boolean","hostname","loggedReducer","action","products","stockReducer","splice","incomeReducer","Number","counterReducer","soldReducer","i","reducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6a01a893.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/form.css';\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport {logIn} from '../actions';\r\n\r\nconst login = (event,email,password,dispatch) => {\r\n    event.preventDefault();\r\n    if(email==='admin@gmail.com'&&password==='12345'){\r\n        setTimeout(()=>{dispatch(logIn())},2000);\r\n        toast.success('Logged In Successfully', { position: toast.POSITION.TOP_CENTER });\r\n    }\r\n    else{\r\n        toast.error(\"Invalid Username or Password\", { position: toast.POSITION.TOP_CENTER });\r\n    }\r\n}\r\nexport default function Login() {\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const dispatch=useDispatch();\r\n    return (\r\n        <div className=\"login\">\r\n            <ToastContainer transition={Zoom} autoClose={2000}></ToastContainer>\r\n            <div className=\"login-triangle\"></div>\r\n            <h2 className=\"login-header\">Log in</h2>\r\n            <form className=\"login-container\" onSubmit={(e) => login(e,email,password,dispatch)}>\r\n                <p><input type=\"email\" placeholder=\"Email\" name='email' onChange={(e)=>setEmail(e.target.value)} /></p>\r\n                <p><input type=\"password\" placeholder=\"Password\" name='password' onChange={(e)=>setPassword(e.target.value)} /></p>\r\n                <p><input type=\"submit\" value=\"Log in\" /></p>\r\n            </form>\r\n        </div>\r\n    );\r\n}","export const logIn = ()=>{\r\n    return {\r\n        type:'SIGN_IN'\r\n    };\r\n};\r\n\r\nexport const logOut = ()=>{\r\n    return {\r\n        type:'SIGN_OUT'\r\n    };\r\n};\r\n\r\nexport const add = (stock)=>{\r\n    return {\r\n        type:'ADD',\r\n        data:stock\r\n    }\r\n}\r\n\r\nexport const reduce =(pos)=>{\r\n    return{\r\n        type:'REDUCE',\r\n        index:pos\r\n    }\r\n}\r\n\r\nexport const editStock = (pos,obj) =>{\r\n    return {\r\n        type:'EDIT',\r\n        data:obj,\r\n        index:pos\r\n    }\r\n}\r\n\r\nexport const deleteStock = (pos) =>{\r\n    return {\r\n        type:'DELETE',\r\n        index:pos\r\n    }\r\n}\r\n\r\nexport const addIncome = (data) =>{\r\n    return {\r\n        type:'ADDINCOME',\r\n        amount:data\r\n    }\r\n}\r\n\r\nexport const addCount = () =>{\r\n    return {\r\n        type:'ADDCOUNT'\r\n    }\r\n}\r\n\r\nexport const addItem = (item) =>{\r\n    return {\r\n        type:'ADDITEM',\r\n        data:item\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport './styles/add.css';\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport {add} from '../actions';\r\n\r\nexport default function Add() {\r\n    const [name,setName]=useState('');\r\n    const [type,setType]=useState('');\r\n    const [price,setPrice]=useState(0);\r\n    const [count,setCount]=useState(0);\r\n    const dispatch=useDispatch();\r\n    \r\n    const addStock=(e)=>{\r\n        e.preventDefault();\r\n        var obj={name,type,price,count};\r\n        dispatch(add(obj));\r\n        toast.success(\"Product Added To The Stocks\", { position: toast.POSITION.TOP_CENTER });\r\n        setName('');\r\n        setType('');\r\n        setPrice(0);\r\n        setCount(0);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <ToastContainer transition={Zoom} autoClose={2000}></ToastContainer>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-1 col-md-1 col-sm-1\"></div>\r\n                <div className=\"col-lg-11 col-md-11 col-sm-11\">\r\n                    <div className=\"login\">\r\n                        <div className=\"login-triangle\"></div>\r\n                        <h2 className=\"login-header\">ADD STOCK</h2>\r\n                        <form className=\"login-container\" onSubmit={(e)=>addStock(e)}>\r\n                            <p><input type=\"text\" placeholder=\"Product Name\" value={name} onChange={(e)=>setName(e.target.value)} required /></p>\r\n                            <p><input type=\"text\" placeholder=\"Product Type\" value={type} onChange={(e)=>setType(e.target.value)} required /></p>\r\n                            <p><input type=\"numbers\" placeholder=\"Product Price\" value={price?price:''} onChange={(e)=>setPrice(e.target.value)} required /></p>\r\n                            <p><input type=\"numbers\" placeholder=\"Number Of Products Available\" value={count?count:''} onChange={(e)=>setCount(e.target.value)} required /></p>\r\n                            <p><input type=\"submit\" value=\"ADD\" /></p>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"," import React from 'react';\r\nimport Login from './Login';\r\nimport Add from './Add';\r\nimport { useSelector} from 'react-redux';\r\n\r\nexport default function Admin(){\r\n    const logged=useSelector(state=>state.logged);\r\n    if(logged)\r\n        return(<Add></Add>);\r\n    else\r\n        return(<Login></Login>);\r\n}","import React, { useState } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport './styles/dashboard.css';\r\nimport { reduce,addIncome,addCount,addItem } from '../actions';\r\n\r\nfunction Dashboard() {\r\n    const stocks = useSelector(state => state.stock);\r\n    const loggedin = useSelector(state => state.logged);\r\n    const dispatch = useDispatch();\r\n    const [key, setKey] = useState(0);\r\n    const reducer = (e, index) => {\r\n        e.preventDefault();\r\n        dispatch(addItem(stocks[index]));\r\n        dispatch(addIncome(stocks[index].price));\r\n        dispatch(reduce(index));\r\n        dispatch(addCount());\r\n        setKey(key + 1);\r\n    }\r\n    const edit=(e,stock,index)=>{\r\n        e.preventDefault();\r\n        stock={...stock,index:index};\r\n        window.location.replace(\"https://aravinth-thunder.github.io/Stocks/#/edit/\"+JSON.stringify(stock));\r\n    }\r\n    console.log(stocks);\r\n    return (\r\n        <div className=\"DashBoard\" key={key}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2 col-lg-2\"></div>\r\n                <div className=\"col-md-10 col-lg-10\">\r\n                    <h2 style={{ marginLeft: '10%' }}>Stocks : </h2><br /><hr></hr>\r\n                    {stocks.length ?\r\n                        stocks.map((stock, index) =>\r\n                            <div className=\"card\" key={stock.name.toString()}>\r\n                                <div className=\"card-horizontal\">\r\n                                    <div className=\"card-body\" >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-md-3\">\r\n                                                <h4>Product Name:<br /></h4><h3>{stock.name}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2\">\r\n                                                <h4>Type:<br /></h4><h3>{stock.type}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2\">\r\n                                                <h4>Price:<br /></h4><h3>{stock.price}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2\">\r\n                                                <h4>Count:<br /></h4><h3>{stock.count}</h3>\r\n                                            </div>\r\n                                            {loggedin ? <>\r\n                                                <div className=\"col-lg-1 col-md-1\">\r\n                                                    <button className=\"ripple\" onClick={(e) => reducer(e, index)}>Sell</button>\r\n                                                </div>\r\n                                                <div className=\"col-lg-2 col-md-2\">\r\n                                                    <button className=\"ripple\" onClick={(e) => edit(e,stock,index)}>Edit</button>\r\n                                                </div> </> : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <h2 style={{ marginLeft: '15%',opacity:'0.7' }}>No Stocks Available</h2>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { useEffect ,useState} from 'react';\r\nimport { ToastContainer, toast,Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { editStock,deleteStock } from '../actions';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport default function EditSock(props) {\r\n    const [name,setName]=useState('');\r\n    const [type,setType]=useState('');\r\n    const [price,setPrice]=useState(0);\r\n    const [count,setCount]=useState(0);\r\n    const [index,setIndex]=useState();\r\n    useEffect(()=>{\r\n        var obj=JSON.parse(props.match.params.stock);\r\n        console.log(obj);\r\n        setName(obj.name);\r\n        setType(obj.type);\r\n        setPrice(obj.price);\r\n        setCount(obj.count);\r\n        setIndex(obj.index);\r\n    },[props.match.params.stock]);\r\n    const dispatch=useDispatch();\r\n    const edit=(e)=>{\r\n        e.preventDefault();\r\n        var obj={name,type,price,count}\r\n        dispatch(editStock(index,obj));\r\n        toast.success('Stock Details Saved', { position: toast.POSITION.TOP_CENTER });\r\n        setTimeout(()=>{window.location.replace(\"https://aravinth-thunder.github.io/Stocks/#/dashboard\")},2000);\r\n    }\r\n    const deletestock= e =>{\r\n        e.preventDefault();\r\n        dispatch(deleteStock(index));\r\n        toast.error('Stock Data Deleted', { position: toast.POSITION.TOP_CENTER });\r\n        setTimeout(()=>{window.location.replace(\"https://aravinth-thunder.github.io/Stocks/#/dashboard\")},2000);\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <ToastContainer transition={Zoom} autoClose={2000}></ToastContainer>\r\n            <div className=\"col-lg-2 col-md-2 col-sm-2\"></div>\r\n            <div className=\"col-lg-10 col-md-10 col-sm-10\">\r\n                <div className=\"login\">\r\n                    <div className=\"login-triangle\"></div>\r\n                    <h2 className=\"login-header\">EDIT STOCK</h2>\r\n                    <form className=\"login-container\">\r\n                        <p><input type=\"text\" placeholder=\"Name\" value={name} onChange={(e)=>setName(e.target.value)} required /></p>\r\n                        <p><input type=\"text\" placeholder=\"Roll No\" value={type} onChange={(e)=>setType(e.target.value)} required /></p>\r\n                        <p><input type=\"numbers\" placeholder=\"Roll No\" value={price} onChange={(e)=>setPrice(e.target.value)} required /></p>\r\n                        <p><input type=\"numbers\" placeholder=\"Roll No\" value={count} onChange={(e)=>setCount(e.target.value)} required /></p>\r\n                        <p><input type=\"submit\" value=\"SAVE\"  onClick={edit}/></p>\r\n                        <p><input type=\"submit\" value=\"DELETE\" onClick={(e)=>deletestock(e)}/></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function TotalIncome() {\r\n    const stocks = useSelector(state => state.sold);\r\n    const income = useSelector(state =>state.income);\r\n    const count = useSelector(state =>state.count);\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-md-3\"></div>\r\n                <div className=\"col-lg-5 col-md-5\">\r\n    <h2 style={{opacity:'0.8'}}>Total Income : {income}</h2>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n    <h2 style={{opacity:'0.8'}}>Total Count : {count}</h2>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <h2 style={{ marginLeft: '25%',textDecoration:'underline' }}><i>SOLD STOCKS : </i></h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-2 col-md-2\"></div>\r\n                <div className=\"col-lg-10 col-md-10\">\r\n                    {stocks.length ?\r\n                        stocks.map((stock, index) =>\r\n                            <div className=\"card\" key={stock.name.toString()}>\r\n                                <div className=\"card-horizontal\">\r\n                                    <div className=\"card-body\" >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-md-3\">\r\n                                                <h4>Product Name:<br /></h4><h3>{stock.name}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2\">\r\n                                                <h4>Type:<br /></h4><h3>{stock.type}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-lg-2 col-md-2\">\r\n                                                <h4>Price:<br /></h4><h3>{stock.price}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-lg-5 col-md-5\">\r\n                                                <h4>Count:<br /></h4><h3>{stock.count}</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <h2 style={{ fontWeight:'bold',opacity:'0.7',marginLeft: '15%' }}>No Stocks Are Sold</h2>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport Admin from './Components/Admin';\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Login from './Components/Login';\nimport Dashboard from './Components/Dashboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logOut } from './actions';\nimport EditStock from './Components/EditStock';\nimport TotalIncome from './Components/TotalIncome';\n\n// http://localhost:3001/#/\n// https://aravinth-thunder.github.io/Stocks/#/\n\nconst logout = (dispatch) => {\n  dispatch(logOut());\n}\n\nfunction App() {\n  const logg = useSelector(state => state.logged);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"top_navbar\">\n        <div className=\"logo\">\n          <a href=\"localhost:3001\">\n            <span className=\"icon\"><i className=\"fa fa-cubes \"></i></span> Stock Management\n          </a>\n        </div>\n      </div>\n      <div className=\"main_body\">\n        <div className=\"sidebar_menu\">\n          <div className=\"inner__sidebar_menu\">\n            <ul>\n              <li>\n                <a href=\"https://aravinth-thunder.github.io/Stocks/#/\" style={{ color: 'white' }}>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-user\"></i></span>\n                  <span className=\"list\">Admin</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"https://aravinth-thunder.github.io/Stocks/#/dashboard\" style={{ color: 'white' }}>\n                  <span className=\"icon\"><i className=\"fa fa-tachometer \"></i></span>\n                  <span className=\"list\">Dash Board</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"https://aravinth-thunder.github.io/Stocks/#/income\" style={{ color: 'white' }}>\n                  <span className=\"icon\"><i className=\"fas fa-dollar\"></i></span>\n                  <span className=\"list\">Total Income</span>\n                </a>\n              </li>\n              {logg ?\n                <li>\n                  <a href=\"localhost:3001\" style={{ color: 'white' }} onClick={() => logout(dispatch)}>\n                    <span className=\"icon\"><i className=\"fa fa-sign-out\"></i></span>\n                    <span className=\"list\">Log Out</span>\n                  </a>\n                </li> : null\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n      <br /><br /><br />\n      <HashRouter>\n        <Route exact path=\"/\" component={() => <Admin></Admin>}></Route>\n        <Route path=\"/login\" component={Login}></Route>\n        <Route path=\"/dashboard\" component={Dashboard}></Route>\n        <Route path=\"/edit/:stock\" component={EditStock}></Route>\n        <Route path=\"/income\" component={TotalIncome}></Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const loggedReducer= (state=false,action)=>{\r\n    switch(action.type){\r\n        case 'SIGN_IN':\r\n            return !state;\r\n        case 'SIGN_OUT':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default loggedReducer;","const products = [\r\n    { name: 'Iphone-X', type: 'Mobile', price: 30000, count: 10 },\r\n    { name: 'Lenovo', type: 'Laptop', price: 28000, count: 5 },\r\n    { name: 'boAt Rockerz 255F', type: 'HeadSet', price: 1399, count: 15 },\r\n    { name: 'POCO F1', type: 'Mobile', price: 18999, count: 3 }\r\n];\r\n\r\nconst stockReducer = (state = products, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            return [...state, action.data];\r\n        case 'REDUCE':\r\n            state[action.index].count = state[action.index].count - 1;\r\n            if (state[action.index].count === 0)\r\n                state.splice(action.index, 1);\r\n            return state;\r\n        case 'EDIT':\r\n            state[action.index]=action.data;\r\n            return state;\r\n        case 'DELETE':\r\n            state.splice(action.index,1);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default stockReducer;","const incomeReducer = (state=0,action)=>{\r\n    switch(action.type){\r\n        case 'ADDINCOME':\r\n            return state+Number(action.amount);\r\n        default:\r\n            return state;\r\n    }\r\n}  \r\n\r\nexport default incomeReducer;","const counterReducer = (state=0,action)=>{\r\n    switch(action.type){\r\n        case 'ADDCOUNT':\r\n            return state+1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","const soldReducer = (state=[],action)=>{\r\n    switch(action.type){\r\n        case 'ADDITEM':\r\n            for(var i=0;i<state.length;i++){\r\n                if(state[i].name===action.data.name && state[i].type===action.data.type && state[i].price===action.data.price){\r\n                    state[i].count+=1;\r\n                    return state;\r\n                }\r\n            }\r\n            var obj={name:action.data.name,type:action.data.type,price:action.data.price,count:1};\r\n            state=[...state,obj];\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default soldReducer;","import loggedReducer from './logged';\r\nimport stockReducer from './stocks';\r\nimport incomeReducer from './incomeReducer';\r\nimport counterReducer from './counter';\r\nimport soldReducer from './soldReducer';\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nconst reducers = combineReducers({\r\n    logged:loggedReducer,\r\n    stock:stockReducer,\r\n    income:incomeReducer,\r\n    count:counterReducer,\r\n    sold:soldReducer\r\n});\r\n\r\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport reducers from './reducers';\nimport {Provider} from 'react-redux';\n\nconst store=createStore(reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}